class Solution(object):
    #solve the closing problem yet leaving the order 
    #counter for nbr of (and nbr of ")" and compare
    #best ide is to use the lenght to compare position of the one u use
    #with the oopsite of that position if the lengh is odd the exemple is wrong
    #already , firt rule it have to be even ,second test for first and last have
    #to be opening and closing right and rest easy to fix
    def ex(self,unit):
        
        test=True
        #add to the other if statment
        if len(unit)%2!=0 :
            return False
                    #add case for last string thats opened wihout close
        if (unit[0]in [")","]","}"]  ) or (unit[len(unit)-1]in ["(","[","{"]):
            return False 
        #the loop is going from the half
        for x in range((len(unit)//2)):
            #if (unit[x]!=unit[-(x+1)]):
            if(unit[x]=='(' and unit[-(x+1)]!= ')'):
                return False
            elif(unit[x]=='{' and unit[-(x+1)]!= '}'):
                return False
            elif(unit[x]=='[' and unit[-(x+1)]!= ']'):
                return False

            

        return test
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        return self.ex(s)
        
